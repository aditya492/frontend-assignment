{"ast":null,"code":"var _jsxFileName = \"/home/aditya-barve/frontend-assignment/src/ProjectTable.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport \"./App.css\";\nimport Pagination from \"./Pagination\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ProjectsTable = ({\n  projects\n}) => {\n  _s();\n  const recordsPerPage = 5;\n  const [currentPage, setCurrentPage] = useState(1);\n  const totalPages = Math.ceil((projects === null || projects === void 0 ? void 0 : projects.length) / recordsPerPage);\n  const currentRecords = projects === null || projects === void 0 ? void 0 : projects.slice((currentPage - 1) * recordsPerPage, currentPage * recordsPerPage);\n  const handlePageChange = page => {\n    setCurrentPage(page);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Kickstarter Projects\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      role: \"table\",\n      \"aria-label\": \"Kickstarter Projects\",\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"S.No.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 27,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Percentage Funded\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 28,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Amount Pledged\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 29,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: currentRecords === null || currentRecords === void 0 ? void 0 : currentRecords.map((project, index) => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: (currentPage - 1) * recordsPerPage + index + 1\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 35,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: Math.round(project[\"percentage.funded\"])\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: [\"$\", project[\"amt.pledged\"]]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 15\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Pagination, {\n      totalPages: totalPages,\n      currentPage: currentPage,\n      onPageChange: handlePageChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 5\n  }, this);\n};\n_s(ProjectsTable, \"6xAUoJ2motYJ38x4zeUWisA+X/4=\");\n_c = ProjectsTable;\nexport default ProjectsTable;\nvar _c;\n$RefreshReg$(_c, \"ProjectsTable\");","map":{"version":3,"names":["React","useState","Pagination","jsxDEV","_jsxDEV","ProjectsTable","projects","_s","recordsPerPage","currentPage","setCurrentPage","totalPages","Math","ceil","length","currentRecords","slice","handlePageChange","page","children","fileName","_jsxFileName","lineNumber","columnNumber","role","map","project","index","round","onPageChange","_c","$RefreshReg$"],"sources":["/home/aditya-barve/frontend-assignment/src/ProjectTable.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport \"./App.css\";\nimport Pagination from \"./Pagination\";\n\n\nconst ProjectsTable = ({ projects }) => {\n  const recordsPerPage = 5;\n  const [currentPage, setCurrentPage] = useState(1);\n\n  const totalPages = Math.ceil(projects?.length / recordsPerPage);\n\n  const currentRecords = projects?.slice(\n    (currentPage - 1) * recordsPerPage,\n    currentPage * recordsPerPage\n  );\n\n  const handlePageChange = (page) => {\n    setCurrentPage(page);\n  };\n\n  return (\n    <div>\n      <h1>Kickstarter Projects</h1>\n      <table role=\"table\" aria-label=\"Kickstarter Projects\">\n        <thead>\n          <tr>\n            <th>S.No.</th>\n            <th>Percentage Funded</th>\n            <th>Amount Pledged</th>\n          </tr>\n        </thead>\n        <tbody>\n          {currentRecords?.map((project, index) => (\n            <tr key={index}>\n              <td>{(currentPage - 1) * recordsPerPage + index + 1}</td>\n              <td>{Math.round(project[\"percentage.funded\"])}</td>\n              <td>${project[\"amt.pledged\"]}</td>\n            </tr>\n          ))}\n        </tbody>\n      </table>\n      <Pagination\n        totalPages={totalPages}\n        currentPage={currentPage}\n        onPageChange={handlePageChange}\n      />\n    </div>\n  );\n};\n\nexport default ProjectsTable;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}